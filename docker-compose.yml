version: '3.9'

services:
  db: 
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: flask_test
    restart: unless-stopped
    ports:
      - "5432:5432"

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PG_USER}"]
      interval: 5s
      timeout: 2s
      retries: 6  

  redis:
    image: redis:6.2.5
    ports:
      - 6379:6379
    volumes:
      - ./config/redis.conf:/redis.conf
    command: [ "redis-server", "/redis.conf" ]
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: 
      - .env
    environment:
      - CREATE_MIGRATION=1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    entrypoint: ["/app/entrypoint.sh"]
    command: python app.py # конешно тут есть вариант выполнить миграции alembic + alembic upgrade head, но это не бест практис
    ports:
      - "5000:5000"
    restart: unless-stopped

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web
    environment:
      REDIS__URL: ${REDIS__URL}
    command: celery -A celery_app.celery worker --loglevel=DEBUG
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web
    environment:
      REDIS__URL: ${REDIS__URL}
    command: celery -A celery_app.celery beat --loglevel=DEBUG
    restart: unless-stopped


volumes:
  postgres_data:
